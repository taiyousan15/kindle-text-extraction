"""Initial schema: 9 tables with pgvector

Revision ID: d53621f402b5
Revises: 
Create Date: 2025-10-28 14:00:24.577863

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql
import pgvector.sqlalchemy

# revision identifiers, used by Alembic.
revision = 'd53621f402b5'
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('biz_files',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('filename', sa.String(length=255), nullable=False),
    sa.Column('tags', postgresql.ARRAY(sa.String()), nullable=True),
    sa.Column('file_blob', sa.LargeBinary(), nullable=False),
    sa.Column('file_size', sa.Integer(), nullable=True),
    sa.Column('mime_type', sa.String(length=100), nullable=True),
    sa.Column('uploaded_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_biz_file_filename', 'biz_files', ['filename'], unique=False)
    op.create_index('idx_biz_file_uploaded', 'biz_files', ['uploaded_at'], unique=False)
    op.create_table('knowledge',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('book_title', sa.String(length=255), nullable=False),
    sa.Column('format', sa.String(length=10), nullable=False),
    sa.Column('score', sa.Float(), nullable=True),
    sa.Column('yaml_text', sa.Text(), nullable=False),
    sa.Column('content_blob', sa.LargeBinary(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_knowledge_book_title', 'knowledge', ['book_title'], unique=False)
    op.create_index('idx_knowledge_format', 'knowledge', ['format'], unique=False)
    op.create_index('idx_knowledge_score', 'knowledge', ['score'], unique=False)
    op.create_table('users',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_table('biz_cards',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('file_id', sa.Integer(), nullable=False),
    sa.Column('content', sa.Text(), nullable=False),
    sa.Column('vector_embedding', pgvector.sqlalchemy.vector.VECTOR(dim=384), nullable=True),
    sa.Column('score', sa.Float(), nullable=True),
    sa.Column('indexed_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['file_id'], ['biz_files.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_biz_card_file', 'biz_cards', ['file_id'], unique=False)
    op.create_index('idx_biz_card_indexed', 'biz_cards', ['indexed_at'], unique=False)
    op.create_index('idx_biz_card_score', 'biz_cards', ['score'], unique=False)
    op.create_index(op.f('ix_biz_cards_file_id'), 'biz_cards', ['file_id'], unique=False)
    op.create_table('feedbacks',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('query', sa.Text(), nullable=False),
    sa.Column('answer', sa.Text(), nullable=False),
    sa.Column('rating', sa.Integer(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_feedback_created', 'feedbacks', ['created_at'], unique=False)
    op.create_index('idx_feedback_rating', 'feedbacks', ['rating'], unique=False)
    op.create_index('idx_feedback_user', 'feedbacks', ['user_id'], unique=False)
    op.create_index(op.f('ix_feedbacks_user_id'), 'feedbacks', ['user_id'], unique=False)
    op.create_table('jobs',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('type', sa.String(length=50), nullable=False),
    sa.Column('status', sa.String(length=50), nullable=False),
    sa.Column('progress', sa.Integer(), nullable=False),
    sa.Column('error_message', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('completed_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_jobs_status'), 'jobs', ['status'], unique=False)
    op.create_index(op.f('ix_jobs_user_id'), 'jobs', ['user_id'], unique=False)
    op.create_table('ocr_results',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('job_id', sa.String(length=36), nullable=False),
    sa.Column('book_title', sa.String(length=255), nullable=False),
    sa.Column('page_num', sa.Integer(), nullable=False),
    sa.Column('text', sa.Text(), nullable=False),
    sa.Column('confidence', sa.Float(), nullable=True),
    sa.Column('image_blob', sa.LargeBinary(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['job_id'], ['jobs.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('job_id', 'page_num', name='uq_job_page')
    )
    op.create_index('idx_ocr_book_title', 'ocr_results', ['book_title'], unique=False)
    op.create_index('idx_ocr_job_page', 'ocr_results', ['job_id', 'page_num'], unique=False)
    op.create_index(op.f('ix_ocr_results_job_id'), 'ocr_results', ['job_id'], unique=False)
    op.create_table('retrain_queue',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('card_id', sa.Integer(), nullable=False),
    sa.Column('score', sa.Float(), nullable=True),
    sa.Column('queued_at', sa.DateTime(), nullable=False),
    sa.Column('processed_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['card_id'], ['biz_cards.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_retrain_card', 'retrain_queue', ['card_id'], unique=False)
    op.create_index('idx_retrain_pending', 'retrain_queue', ['processed_at'], unique=False, postgresql_where=sa.text('processed_at IS NULL'))
    op.create_index('idx_retrain_processed', 'retrain_queue', ['processed_at'], unique=False)
    op.create_index('idx_retrain_queued', 'retrain_queue', ['queued_at'], unique=False)
    op.create_index(op.f('ix_retrain_queue_card_id'), 'retrain_queue', ['card_id'], unique=False)
    op.create_table('summaries',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('job_id', sa.String(length=36), nullable=False),
    sa.Column('book_title', sa.String(length=255), nullable=False),
    sa.Column('summary_text', sa.Text(), nullable=False),
    sa.Column('granularity', sa.String(length=50), nullable=True),
    sa.Column('length', sa.String(length=50), nullable=True),
    sa.Column('tone', sa.String(length=50), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['job_id'], ['jobs.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_summary_book_title', 'summaries', ['book_title'], unique=False)
    op.create_index('idx_summary_job', 'summaries', ['job_id'], unique=False)
    op.create_index(op.f('ix_summaries_job_id'), 'summaries', ['job_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_summaries_job_id'), table_name='summaries')
    op.drop_index('idx_summary_job', table_name='summaries')
    op.drop_index('idx_summary_book_title', table_name='summaries')
    op.drop_table('summaries')
    op.drop_index(op.f('ix_retrain_queue_card_id'), table_name='retrain_queue')
    op.drop_index('idx_retrain_queued', table_name='retrain_queue')
    op.drop_index('idx_retrain_processed', table_name='retrain_queue')
    op.drop_index('idx_retrain_pending', table_name='retrain_queue', postgresql_where=sa.text('processed_at IS NULL'))
    op.drop_index('idx_retrain_card', table_name='retrain_queue')
    op.drop_table('retrain_queue')
    op.drop_index(op.f('ix_ocr_results_job_id'), table_name='ocr_results')
    op.drop_index('idx_ocr_job_page', table_name='ocr_results')
    op.drop_index('idx_ocr_book_title', table_name='ocr_results')
    op.drop_table('ocr_results')
    op.drop_index(op.f('ix_jobs_user_id'), table_name='jobs')
    op.drop_index(op.f('ix_jobs_status'), table_name='jobs')
    op.drop_table('jobs')
    op.drop_index(op.f('ix_feedbacks_user_id'), table_name='feedbacks')
    op.drop_index('idx_feedback_user', table_name='feedbacks')
    op.drop_index('idx_feedback_rating', table_name='feedbacks')
    op.drop_index('idx_feedback_created', table_name='feedbacks')
    op.drop_table('feedbacks')
    op.drop_index(op.f('ix_biz_cards_file_id'), table_name='biz_cards')
    op.drop_index('idx_biz_card_score', table_name='biz_cards')
    op.drop_index('idx_biz_card_indexed', table_name='biz_cards')
    op.drop_index('idx_biz_card_file', table_name='biz_cards')
    op.drop_table('biz_cards')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_table('users')
    op.drop_index('idx_knowledge_score', table_name='knowledge')
    op.drop_index('idx_knowledge_format', table_name='knowledge')
    op.drop_index('idx_knowledge_book_title', table_name='knowledge')
    op.drop_table('knowledge')
    op.drop_index('idx_biz_file_uploaded', table_name='biz_files')
    op.drop_index('idx_biz_file_filename', table_name='biz_files')
    op.drop_table('biz_files')
    # ### end Alembic commands ###
